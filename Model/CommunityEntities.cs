//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class CommunityEntities
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public CommunityEntities()
        {
            this.ActivatedLogs = new HashSet<ActivatedLogs>();
            this.Announcements = new HashSet<Announcements>();
            this.Authentications = new HashSet<Authentications>();
            this.CommunityAdministrators = new HashSet<CommunityAdministrators>();
            this.CommunityUsers = new HashSet<CommunityUsers>();
            this.DoorGroups = new HashSet<DoorGroups>();
            this.Doors = new HashSet<Doors>();
            this.EveryDayDataOfCommunities = new HashSet<EveryDayDataOfCommunities>();
            this.Tactics = new HashSet<Tactics>();
        }
    
        public int CommunityId { get; set; }
        public string Name { get; set; }
        public string Address { get; set; }
        public string Image { get; set; }
        public string Describe { get; set; }
        public string Info { get; set; }
        public string Remarks { get; set; }
        public bool IsEnable { get; set; }
        public int TotaleCount { get; set; }
        public string BBSUrl { get; set; }
        public string PhoneDataJson { get; set; }
        public string Phone { get; set; }
        public string Locality { get; set; }
        public int IsActivatedNumber { get; set; }
        public int IsAuthenticationNumber { get; set; }
        public bool IsActivated { get; set; }
        public Nullable<int> AdviserAndCommunityID { get; set; }
        public Nullable<int> WechatQrCodeId { get; set; }
        public Nullable<int> RedPacketRuleId { get; set; }
        public string Images { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ActivatedLogs> ActivatedLogs { get; set; }
        public virtual AdviserAndCommunities AdviserAndCommunities { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Announcements> Announcements { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Authentications> Authentications { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CommunityAdministrators> CommunityAdministrators { get; set; }
        public virtual RedPacketRules RedPacketRules { get; set; }
        public virtual WechatQrCodes WechatQrCodes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CommunityUsers> CommunityUsers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DoorGroups> DoorGroups { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Doors> Doors { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EveryDayDataOfCommunities> EveryDayDataOfCommunities { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Tactics> Tactics { get; set; }
    }
}
